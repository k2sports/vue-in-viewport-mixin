// Generated by CoffeeScript 1.12.5

/*
 * vm - the view instance
 * vp - the viewport
 */

(function() {
  var aboveViewport, belowViewport, inViewport, inViewportEntirely, nope;

  inViewport = function(vm, vp, options) {
    return vm.top + options.offsetTop <= vp.height && vm.bottom + options.offsetBottom >= 0 && vm.left <= vp.width && vm.right >= 0;
  };

  inViewportEntirely = function(vm, vp, options) {
    return vm.top + options.offsetTop >= 0 && vm.bottom + options.offsetBottom <= vp.height && vm.left >= 0 && vm.right <= vp.width;
  };

  aboveViewport = function(vm, vp, options) {
    return (vm.top + vp.height) + options.offsetBottom <= vp.height;
  };

  belowViewport = function(vm, vp, options) {
    return vm.bottom + options.offsetTop >= vp.height;
  };

  nope = {
    inViewport: false,
    inViewportEntirely: false,
    aboveViewport: false,
    belowViewport: false
  };

  module.exports = function(el, options) {
    var i, key, len, ref, ref1, vm, vp;
    if (!el) {
      return nope;
    }
    if (!options) {
      options = {};
    }
    if (!options.offsetTop) {
      options.offsetTop = 0;
    }
    if (!options.offsetBottom) {
      options.offsetBottom = 0;
    }
    vp = {};
    vp.height = document.documentElement.clientHeight;
    vp.width = document.documentElement.clientWidth;
    ref = ['offsetTop', 'offsetBottom'];
    for (i = 0, len = ref.length; i < len; i++) {
      key = ref[i];
      if ((0 < (ref1 = Math.abs(options[key])) && ref1 < 1)) {
        options[key] = vp.height * options[key];
      }
    }
    vm = el.getBoundingClientRect();
    if (vm.width === 0 && vm.height === 0) {
      return nope;
    }
    return {
      inViewport: inViewport(vm, vp, options),
      inViewportEntirely: inViewportEntirely(vm, vp, options),
      aboveViewport: aboveViewport(vm, vp, options),
      belowViewport: belowViewport(vm, vp, options)
    };
  };

}).call(this);
